<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xml:space="preserve">

    <!-- Copyright 2016-2021 Steinar Bang                                                -->
    <!--                                                                                 -->
    <!-- Licensed under the Apache License, Version 2.0 (the "License");                 -->
    <!-- you may not use this file except in compliance with the License.                -->
    <!-- You may obtain a copy of the License at                                         -->
    <!--   http://www.apache.org/licenses/LICENSE-2.0                                    -->
    <!-- Unless required by applicable law or agreed to in writing,                      -->
    <!-- software distributed under the License is distributed on an "AS IS" BASIS,      -->
    <!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.        -->
    <!-- See the License for the specific language governing permissions and limitations -->
    <!-- under the License.                                                              -->

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>no.priv.bang.pom</groupId>
        <artifactId>bang-pom</artifactId>
        <version>1.0.3</version>
    </parent>
    <groupId>no.priv.bang.ukelonn</groupId>
    <artifactId>ukelonn</artifactId>
    <version>1.0.0-SNAPSHOT</version>

    <packaging>pom</packaging>

    <name>ukelonn webapp</name>

    <modules>
        <module>ukelonn.services</module>
        <module>ukelonn.backend</module>
        <module>ukelonn.web.security</module>
        <module>ukelonn.web.services</module>
        <module>ukelonn.web.frontend</module>
        <module>ukelonn.testutils</module>
        <module>ukelonn.db.liquibase</module>
        <module>ukelonn.db.liquibase.test</module>
        <module>ukelonn.db.as.authservicedb</module>
        <module>ukelonn.db.liquibase.production</module>
        <module>karaf</module>
        <module>ukelonn.tests</module>
        <module>jacoco-coverage-report</module>
        <module>docker</module>
    </modules>

    <properties>
        <sonar.coverage.jacoco.xmlReportPaths>${project.basedir}/../jacoco-coverage-report/target/site/jacoco-aggregate/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
        <osgi-service-adaptors.version>1.1.1</osgi-service-adaptors.version>
        <authservice.version>1.13.1</authservice.version>
        <dependency.shiro.version>1.7.0</dependency.shiro.version>
        <bang-osgi-service>1.7.1</bang-osgi-service>
        <bang-servlet.version>1.5.1</bang-servlet.version>
        <datasourceproxy.version>1.1.0</datasourceproxy.version>
        <beans.version>1.1.1</beans.version>
        <jackson.version>2.12.1</jackson.version>
        <jersey.version>2.33</jersey.version>
        <open-iconic.version>1.1.1</open-iconic.version>
        <sonar.cpd.exclusions>
            **/PGUkelonnDatabaseProvider.java,
            **/UkelonnDatabaseProvider.java
        </sonar.cpd.exclusions>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.apache.karaf</groupId>
                <artifactId>karaf-bom</artifactId>
                <version>${karaf.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>no.priv.bang.osgi.service.adapters</groupId>
                <artifactId>adapters.logservice</artifactId>
                <version>${osgi-service-adaptors.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>no.priv.bang.osgiservice</groupId>
                <artifactId>osgiservice.users</artifactId>
                <version>${bang-osgi-service}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>no.priv.bang.authservice</groupId>
                <artifactId>authservice.definitions</artifactId>
                <version>${authservice.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>no.priv.bang.authservice</groupId>
                <artifactId>authservice.db.liquibase</artifactId>
                <version>${authservice.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>no.priv.bang.authservice</groupId>
                <artifactId>authservice.users</artifactId>
                <version>${authservice.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>no.priv.bang.authservice</groupId>
                <artifactId>authservice.web.security.dbrealm</artifactId>
                <version>${authservice.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>no.priv.bang.authservice</groupId>
                <artifactId>authservice.web.security.memorysession</artifactId>
                <version>${authservice.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>no.priv.bang.osgi.service.adapters</groupId>
                <artifactId>service-mocks</artifactId>
                <version>${osgi-service-adaptors.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>no.priv.bang.servlet</groupId>
                <artifactId>servlet.frontend</artifactId>
                <version>${bang-servlet.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>no.priv.bang.servlet</groupId>
                <artifactId>servlet.jersey</artifactId>
                <version>${bang-servlet.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-core</artifactId>
                <version>${dependency.shiro.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-web</artifactId>
                <version>${dependency.shiro.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>no.priv.bang.beans</groupId>
                <artifactId>beans.immutable</artifactId>
                <version>${beans.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>no.priv.bang.jdbc</groupId>
                <artifactId>jdbc.datasourceproxy</artifactId>
                <version>${datasourceproxy.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.containers</groupId>
                <artifactId>jersey-container-servlet</artifactId>
                <version>${jersey.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.inject</groupId>
                <artifactId>jersey-hk2</artifactId>
                <version>${jersey.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.media</groupId>
                <artifactId>jersey-media-json-jackson</artifactId>
                <version>${jersey.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.webjars.bower</groupId>
                <artifactId>open-iconic</artifactId>
                <version>${open-iconic.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <show>private</show>
                    <source>8</source>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.eluder.coveralls</groupId>
                <artifactId>coveralls-maven-plugin</artifactId>
                <dependencies>
                    <dependency>
                        <groupId>jakarta.xml.bind</groupId>
                        <artifactId>jakarta.xml.bind-api</artifactId>
                        <version>2.3.3</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <jacocoReports>
                        <jacocoReport>${project.basedir}/jacoco-coverage-report/target/site/jacoco-aggregate/jacoco.xml</jacocoReport>
                    </jacocoReports>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.0.0-M3</version>
                <executions>
                    <execution>
                        <id>enforce-no-duplicate-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <banDuplicatePomDependencyVersions/>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <extensions>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ssh</artifactId>
                <version>3.2.0</version>
            </extension>
        </extensions>
    </build>

    <distributionManagement>
        <repository>
            <id>ssh-maven-travis</id>
            <url>sftp://maven.bang.priv.no/repository</url>
        </repository>
        <snapshotRepository>
            <id>ssh-maven-travis</id>
            <url>sftp://maven.bang.priv.no/repository</url>
        </snapshotRepository>
    </distributionManagement>

</project>
