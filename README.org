* Oldalbum

If you have some old image archives from the web's baby years in the 90-ies and would like to link to the images from social media and have the linked images show up nicely, then this is the application you have waited for.

The application can be run in two ways:
 1. With a PostgreSQL database
 2. With an in-memory derby database that is provisioned from a file loaded from an URL (you need a web server that can serve the file)

The application doesn't store the images.  You need to let the original image archive to keep running.  The application just points into the old image archive and serve up the images with open graph and twitter card meta tags added.

The images are served up in a bootstrap styled, responsive layout, and should appear nicely on both mobile devices and larger screens.

** The reason this application exists
 The idea for the application comes from that I have some old albums from the 90ies that I occasionally would like to link to.  Since the images lack [[https://ogp.me][Open Graph]] or [[https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/abouts-cards][twitter card]] tags, linking to the images from social media doesn't look to hot.

 I first thought about changing the perl script that generates the albums, to add a wrapper to the main jpeg, with the OpenGraph headers.

 But then the thought struck me: I could just leave the old JPEGs where they are and create a completely separate webapp that provides a navigation and metadata framework and just uses an <img> tag to display the images from the location where they are today.

 And this is the webapp, called "oldalbum", because it is more a way to display existing old albums than yet another album application

** Status

[[https://travis-ci.org/steinarb/oldalbum][file:https://travis-ci.org/steinarb/oldalbum.svg?branch=master]] [[https://sonarcloud.io/dashboard?id=no.priv.bang.oldalbum%3Aoldalbum][file:https://sonarcloud.io/api/project_badges/measure?project=no.priv.bang.oldalbum%3Aoldalbum&metric=alert_status#.svg]] [[https://maven-badges.herokuapp.com/maven-central/no.priv.bang.oldalbum/oldalbum][file:https://maven-badges.herokuapp.com/maven-central/no.priv.bang.oldalbum/oldalbum/badge.svg]] [[https://www.javadoc.io/doc/no.priv.bang.oldalbum/oldalbum][file:https://www.javadoc.io/badge/no.priv.bang.oldalbum/oldalbum.svg]]

*** SonarCloud

[[https://sonarcloud.io/dashboard/index/no.priv.bang.oldalbum%3Aoldalbum][file:https://sonarcloud.io/api/project_badges/measure?project=no.priv.bang.oldalbum%3Aoldalbum&metric=ncloc#.svg]] [[https://sonarcloud.io/dashboard/index/no.priv.bang.oldalbum%3Aoldalbum][file:https://sonarcloud.io/api/project_badges/measure?project=no.priv.bang.oldalbum%3Aoldalbum&metric=bugs#.svg]] [[https://sonarcloud.io/dashboard/index/no.priv.bang.oldalbum%3Aoldalbum][file:https://sonarcloud.io/api/project_badges/measure?project=no.priv.bang.oldalbum%3Aoldalbum&metric=vulnerabilities#.svg]] [[https://sonarcloud.io/dashboard/index/no.priv.bang.oldalbum%3Aoldalbum][file:https://sonarcloud.io/api/project_badges/measure?project=no.priv.bang.oldalbum%3Aoldalbum&metric=code_smells#.svg]] [[https://sonarcloud.io/dashboard/index/no.priv.bang.oldalbum%3Aoldalbum][file:https://sonarcloud.io/api/project_badges/measure?project=no.priv.bang.oldalbum%3Aoldalbum&metric=coverage#.svg]]

*** Release history

| Date                   | Version | Description                                                                       |
|------------------------+---------+-----------------------------------------------------------------------------------|
| <2020-09-01 Tue 22:03> |   1.2.0 | Improved layout on large display. REST endpoint for dumping database              |
| <2020-08-26 Wed 23:41> |   1.1.0 | Make page preview work in twitter, show prev/next arrows better on large displays |
| <2020-08-23 Sun 00:29> |   1.0.0 | First release                                                                     |

** Installation

*** Installation with test database
 Procedure:
  1. Download and install apache karaf
  2. From the karaf console, give the following commands:
     #+BEGIN_EXAMPLE
       feature:repo-add mvn:no.priv.bang.oldalbum/oldalbum/LATEST/xml/features
       feature:install oldalbum-with-derby
     #+END_EXAMPLE

*** Installation with production database
 Procedure:
  1. Download and install apache karaf
  2. Create PosgreSQL user karaf, and give "karaf" (without the quotes) as the password (or pick a different password, and change the database password in the karaf config file =etc/org.ops4j.datasource-oldalbum-production.cfg=, note1: this is =etc/= inside karaf note2: the file is created after oldalbum installation, and you will have to restart karaf after changing the config file):
     #+begin_example
       /usr/bin/sudo -u postgres createuser karaf --pwprompt
     #+end_example
  3. Create a blank PostgreSQL database with user karaf as the owner
     #+begin_example
       /usr/bin/sudo -u postgres createdb -O karaf oldalbum
     #+end_example
  4. From the karaf console, give the following commands:
     #+BEGIN_EXAMPLE
       feature:repo-add mvn:no.priv.bang.authservice/authservice/LATEST/xml/features
       feature:install user-admin-with-productiondb
       feature:repo-add mvn:no.priv.bang.oldalbum/oldalbum/LATEST/xml/features
       feature:install oldalbum-with-postgresql-and-provided-authservice
     #+END_EXAMPLE

** License

This software is licensed under Apache Public License v 2.0.

See the LICENSE file for the full details.
